/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.RestaurantAdminRole;

import model.EcoSystem;
import model.Enterprise.Enterprise;
import model.NetworkLink.Network;
import model.Organization;
import model.UserAccount.UserAccount;
import model.ServiceQueue.PlaceOrderWorkRequest;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harsh
 */
public class RestaurantOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderHistoryJPanel
     */
    private final EcoSystem system;
    private String name;
    public RestaurantOrderHistoryJPanel(EcoSystem system) {
        initComponents();
        this.system=system;
        populateOrderHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JOrderHistory = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Adobe Devanagari", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER HISTORY");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);

        JOrderHistory.setBackground(new java.awt.Color(204, 204, 204));
        JOrderHistory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JOrderHistory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        JOrderHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "ORDER ID", "ORDER DATE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JOrderHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(355, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 377, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
        private void populateOrderHistory()
        {   DefaultTableModel model = (DefaultTableModel) JOrderHistory.getModel();
            model.setRowCount(0);
            getUsername();
            for(PlaceOrderWorkRequest workRequest:system.getWorkQueue().getWorkRequestList())
            {
                if(workRequest.getRestaurant().getName().equals(name))
                {
                     Object[] row = new Object[5];
                    row[0] = workRequest.getId();
                    row[1] = workRequest.getRequestDate();
                    row[2] = workRequest.getStatus();
                    if(workRequest.getResolveDate()==null)
                    {
                        row[3]="Not yet Delivered";
                    }
                    else{
                        row[3] = workRequest.getResolveDate();
                    }
                    model.addRow(row);
                }
                   
            }

        }
         private String getUsername()
    {
               for(Network network :system.getNetworks())
                      {
                          for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterprises())
                          {
                              if(enterprise.getEnterpriseType().equals("Restaurant"))
                              {
                                  for(Organization organization:enterprise.getOrganizationDirectory().getOrganisationList())
                                  {
                                      for(UserAccount userAccount :organization.getUserAccountDirectory().getUserAccountList())
                                      {
                                          if(userAccount.getUniqueId()== system.getLogInUser().getLogInId())
                                          {
                                             name=enterprise.getName();
                                             return name;
                                          }

                                      }
                                  }
                              }
                          }
                      }
               return name;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JOrderHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
